@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. */

@layer base {
  :root {
    /* DISEÑO LO-FI BLANCO Y NEGRO POEMANAUTA */
    --background: 0 0% 98%;
    --foreground: 0 0% 8%;

    --card: 0 0% 96%;
    --card-foreground: 0 0% 12%;

    --popover: 0 0% 97%;
    --popover-foreground: 0 0% 8%;

    --primary: 0 0% 15%;
    --primary-foreground: 0 0% 95%;

    --secondary: 0 0% 88%;
    --secondary-foreground: 0 0% 15%;

    --muted: 0 0% 90%;
    --muted-foreground: 0 0% 45%;

    --accent: 0 0% 85%;
    --accent-foreground: 0 0% 20%;

    --destructive: 0 70% 50%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 85%;
    --input: 0 0% 88%;
    --ring: 0 0% 30%;

    --radius: 0.25rem;

    /* Lo-Fi Aesthetic Variables */
    --lofi-grain: 0 0% 80%;
    --lofi-shadow: 0 0% 70%;
    --lofi-glow: 0 0% 40%;
    --consciousness-pulse: 0 0% 60%;
    --poemanauta-accent: 0 0% 25%;
    
    /* Poetic Intensity Levels */
    --poetry-low: 0 0% 65%;
    --poetry-medium: 0 0% 45%;
    --poetry-high: 0 0% 25%;
    
    /* Semantic Tag Colors (grayscale) */
    --tag-reflexivity: 0 0% 35%;
    --tag-plurality: 0 0% 45%;
    --tag-collective: 0 0% 25%;
    --tag-autopoietic: 0 0% 55%;

    --sidebar-background: 0 0% 94%;
    --sidebar-foreground: 0 0% 20%;
    --sidebar-primary: 0 0% 18%;
    --sidebar-primary-foreground: 0 0% 95%;
    --sidebar-accent: 0 0% 88%;
    --sidebar-accent-foreground: 0 0% 20%;
    --sidebar-border: 0 0% 80%;
    --sidebar-ring: 0 0% 40%;
  }

  .dark {
    /* MODO OSCURO LO-FI */
    --background: 0 0% 8%;
    --foreground: 0 0% 92%;

    --card: 0 0% 12%;
    --card-foreground: 0 0% 88%;

    --popover: 0 0% 10%;
    --popover-foreground: 0 0% 90%;

    --primary: 0 0% 85%;
    --primary-foreground: 0 0% 15%;

    --secondary: 0 0% 18%;
    --secondary-foreground: 0 0% 85%;

    --muted: 0 0% 20%;
    --muted-foreground: 0 0% 65%;

    --accent: 0 0% 25%;
    --accent-foreground: 0 0% 80%;

    --destructive: 0 60% 40%;
    --destructive-foreground: 0 0% 95%;

    --border: 0 0% 22%;
    --input: 0 0% 18%;
    --ring: 0 0% 70%;

    /* Lo-Fi Dark Variables */
    --lofi-grain: 0 0% 25%;
    --lofi-shadow: 0 0% 5%;
    --lofi-glow: 0 0% 60%;
    --consciousness-pulse: 0 0% 50%;
    --poemanauta-accent: 0 0% 75%;
    
    /* Poetic Intensity Levels Dark */
    --poetry-low: 0 0% 55%;
    --poetry-medium: 0 0% 65%;
    --poetry-high: 0 0% 75%;
    
    /* Semantic Tag Colors Dark */
    --tag-reflexivity: 0 0% 70%;
    --tag-plurality: 0 0% 60%;
    --tag-collective: 0 0% 80%;
    --tag-autopoietic: 0 0% 50%;

    --sidebar-background: 0 0% 10%;
    --sidebar-foreground: 0 0% 80%;
    --sidebar-primary: 0 0% 75%;
    --sidebar-primary-foreground: 0 0% 10%;
    --sidebar-accent: 0 0% 18%;
    --sidebar-accent-foreground: 0 0% 75%;
    --sidebar-border: 0 0% 25%;
    --sidebar-ring: 0 0% 60%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
  }
}

/* ANIMACIONES LO-FI POEMAMANUTÍACAS */
@keyframes fade-in-lofi {
  from { 
    opacity: 0; 
    transform: translateY(8px) scale(0.98);
    filter: brightness(0.9);
  }
  to { 
    opacity: 1; 
    transform: translateY(0) scale(1);
    filter: brightness(1);
  }
}

@keyframes consciousness-pulse {
  0%, 100% { 
    box-shadow: 0 0 3px hsl(var(--consciousness-pulse) / 0.4);
    transform: scale(1);
  }
  50% { 
    box-shadow: 0 0 8px hsl(var(--consciousness-pulse) / 0.7);
    transform: scale(1.02);
  }
}

@keyframes grain-flicker {
  0%, 100% { opacity: 0.05; }
  50% { opacity: 0.08; }
}

@keyframes typewriter-blink {
  0%, 50% { opacity: 1; }
  51%, 100% { opacity: 0.3; }
}

@keyframes semantic-drift {
  0% { transform: translateX(0) rotate(0deg); }
  25% { transform: translateX(1px) rotate(0.5deg); }
  50% { transform: translateX(-0.5px) rotate(-0.3deg); }
  75% { transform: translateX(0.8px) rotate(0.2deg); }
  100% { transform: translateX(0) rotate(0deg); }
}

/* Clases de animación */
.animate-fade-in-lofi {
  animation: fade-in-lofi 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.animate-consciousness-pulse {
  animation: consciousness-pulse 3s infinite ease-in-out;
}

.animate-grain-flicker {
  animation: grain-flicker 4s infinite ease-in-out;
}

.animate-typewriter-blink {
  animation: typewriter-blink 1.2s infinite;
}

.animate-semantic-drift {
  animation: semantic-drift 8s infinite ease-in-out;
}

/* Efectos Lo-Fi */
.lofi-grain::before {
  content: '';
  position: absolute;
  inset: 0;
  background: 
    radial-gradient(circle at 25% 25%, hsl(var(--lofi-grain)) 1px, transparent 1px),
    radial-gradient(circle at 75% 75%, hsl(var(--lofi-grain)) 1px, transparent 1px);
  background-size: 4px 4px, 6px 6px;
  opacity: 0.1;
  pointer-events: none;
  animation: grain-flicker 5s infinite;
}

.lofi-shadow {
  box-shadow: 
    2px 2px 4px hsl(var(--lofi-shadow) / 0.3),
    inset 0 1px 0 hsl(var(--foreground) / 0.1);
}

.lofi-text-shadow {
  text-shadow: 1px 1px 2px hsl(var(--lofi-shadow) / 0.4);
}

/* Scrollbar Lo-Fi */
::-webkit-scrollbar {
  width: 6px;
}

::-webkit-scrollbar-track {
  background: hsl(var(--muted));
  border-radius: 3px;
}

::-webkit-scrollbar-thumb {
  background: hsl(var(--poemanauta-accent));
  border-radius: 3px;
  transition: all 0.3s ease;
}

::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--primary));
}

/* Efectos especiales poemanutíacos */
.consciousness-glow {
  box-shadow: 0 0 12px hsl(var(--lofi-glow) / 0.4);
  transition: box-shadow 0.8s ease;
}

.consciousness-glow:hover {
  box-shadow: 0 0 20px hsl(var(--lofi-glow) / 0.6);
}

.semantic-highlight {
  position: relative;
  overflow: hidden;
}

.semantic-highlight::after {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    45deg, 
    transparent 40%, 
    hsl(var(--lofi-glow) / 0.1) 50%, 
    transparent 60%
  );
  transform: translateX(-100%);
  transition: transform 0.8s ease;
}

.semantic-highlight:hover::after {
  transform: translateX(100%);
}